<div class="plugin-service-master">
  <div id="events-page">

    <header>
      <%= link_to "<", plugin_service_master_prev_event_week_path %>
      <div class="daterange">
        <%= @startdate.strftime '%b %d' %> - 
        <%= @enddate  .strftime '%b %d' %>
      </div>
      <%= link_to ">", plugin_service_master_next_event_week_path %>
      <%= render partial: 'links' %>
      <div id="title"><h2>Events</h2></div>
      <div id="cust-filter-wrap">
        <%= label_tag :cust_filter, 'Customer' %>
        <%= select_tag :cust_filter, 
            options_for_select(
            @customers.map { |a| [ a.wg_name, a.wg_num ] }, 
            @cust_filter), prompt: "Select Customer" %>
      </div>
    </header>

    <main>
      <table id="main-table" class="popup-owner-js">
        <thead>
          <tr>
            <th>
              <table class="custweek">
                <tr>
                  <th class="cust">Customer</th>
                  <th>
                    <table class="teamweek">
                      <tr>
                        <th class="sched">Mon</br><%= (@startdate + 0.days).strftime('%-m/%-d') %></Schedule>
                        <th class="sched">Tue</br><%= (@startdate + 1.days).strftime('%-m/%-d') %></th>
                        <th class="sched">Wed</br><%= (@startdate + 2.days).strftime('%-m/%-d') %></th>
                        <th class="sched">Thu</br><%= (@startdate + 3.days).strftime('%-m/%-d') %></th>
                        <th class="sched">Fri</br><%= (@startdate + 4.days).strftime('%-m/%-d') %></th>
                        <th class="sched">Sat</br><%= (@startdate + 5.days).strftime('%-m/%-d') %></th>
                      </tr>
                    </table>
                  </th>
                </tr>
              </table>
            </th>
          </tr>
        </thead>
        <tbody>
          <% @vw.emp_weeks.each_with_index do |ew, ew_index| %>
            <tr>
              <td>
                <table class="custweek">
                  <% ew.cust_weeks.each_with_index do |cw, cw_index| %>
                    <tr <%= raw 'class="even"' if cw_index.even? %>>
                      <td class="cust"><%= "#{ cw.customer.wg_name }" %></td>
                      <td>
                        <table class="teamweek">
                          <% cw.team_weeks.each do |tw| %>
                            <tr <%= raw 'class="even"' if cw_index.even? %>>
                              <td <%= raw generate_td_attr(tw.day1) %>> <%= raw generate_td_content(tw.day1, true) %></td>
                              <td <%= raw generate_td_attr(tw.day2) %>> <%= raw generate_td_content(tw.day2, true) %></td>
                              <td <%= raw generate_td_attr(tw.day3) %>> <%= raw generate_td_content(tw.day3, true) %></td>
                              <td <%= raw generate_td_attr(tw.day4) %>> <%= raw generate_td_content(tw.day4, true) %></td>
                              <td <%= raw generate_td_attr(tw.day5) %>> <%= raw generate_td_content(tw.day5, true) %></td>
                              <td <%= raw generate_td_attr(tw.day6) %>> <%= raw generate_td_content(tw.day6, true) %></td>
                            </tr>
                          <% end %>
                        </table>
                      </td>
                    </tr>
                  <% end %>
                </table>
              </td>
            </tr>
          <% end %>
          <%= render partial: "event_popup" %>
        </tbody>
      </table>
      <div class="shrink-wrap login" style="display:none">
        <form>
          <div id="add-customer-btn" class="submit-btn">
           Add Customer</div>
        </form>    
      </div>
      <%= render partial: "legend" %>
    </main>
  </div>  
</div>  

<!-- Scripts -->
<script>

  //--------------- Variables ---------------
  
  var day_editing = 0;
  var customer = {};
  var employee = {};
  var workgroups = {};
  var cust_pattern = {};
  
  // Popup is draggable
  var popup = $('#event-popup').draggable();

  //--------------- Functions ---------------

  function editSchedule(td, e) {
    resetPopup();
    // Find the <td> it references
    schid     = td.attr('schid');
    filekey   = td.attr('filekey');
    date      = td.attr('date');
    starttime = td.attr('starttime');
    endtime   = td.attr('endtime');
    cust      = td.attr('cust');
    team      = td.attr('team');
    activity  = td.attr('activity');
    label     = td.attr('label');
    // Load the values into the schedule popup
    $('#schid')         .val(schid); 
    $('#filekey')       .val(filekey);
    $('#sch_date')      .val(date);
    $('#sch_start_time').val(starttime); 
    $('#sch_end_time')  .val(endtime); 
    $('#sch_wg3')       .val(cust);
    $('#sch_wg8')       .val(team);
    $('#sch_wg5')       .val(activity);
    $('#label')         .val(label);
    // Show the schedule popup
    var offset = $('.popup-owner-js').offset();
    popup.css("left", e.pageX - offset.left + 'px');
    popup.css("top",  e.pageY - offset.top + 'px');
    popup.show();
    $('#sch_start_time').select();
  }

  function resetPopup() {
    $('#sch_start_time').css("background","#fff");
    $('#sch_end_time').css("background","#fff");
    $('#sch_start_time').val('');
    $('#sch_end_time').val('');
    $('#sch_wg5').val('');
    $('#label').val('');
  }

  function cancelSchedule() {
    resetPopup();
    popup.hide(); 
  }

  function saveSchedule() {

    // Validate times
    var startCheck = checkTime($('#sch_start_time'));
    var endCheck   = checkTime($('#sch_end_time'));
    $('#sch_start_time').css("background","#fff");
    $('#sch_end_time').css("background","#fff");

    // If they pass
    if (startCheck && endCheck) {
      
      // Make moment objects to contain sched info
      var start_time = parseTime($('#sch_start_time').val());
      var end_time   = parseTime($('#sch_end_time').val());
      
      // Adjust end if its before start
      if (start_time.isAfter(end_time)) end_time = end_time.add('hours', 12); // For am - pm
      if (start_time.isAfter(end_time)) end_time = end_time.add('hours', 12); // For pm - am

      // Refresh inputs with parsed times
      $('#sch_start_time').val(start_time.format('h:mm a'))
      $('#sch_end_time').val(end_time.format('h:mm a'))

      // Send it to the server - save this schedule and reload page
      $.post('save_schedule', $('#form-popup').serialize(), function() {
        location.reload();
      });

    // If they didn't pass make them red
    } else {
      if (!startCheck) {
        $('#sch_start_time').css("background","#ffc4ba");
        $('#sch_start_time').select();
      }
      if (!endCheck) {
        $('#sch_end_time').css("background","#ffc4ba");
        $('#sch_end_time').select();
      }
    }
  }

  function deleteSchedule()
  {
    // Tell server to delete this schedule
    $.post('delete_schedule', $('#form-popup').serialize(), function() {
      location.reload();
    });
  }

  // Check if input has a valid time
  function checkTime(field) {
    var valid = true;

    // Regex for valid time format
    // re = /(\d{1,2}):(\d{2})(:00)?([ap]m)?/   // good
    re = /(\d+)(?::(\d\d))?\s*(p?)/i;        // better
    var val = field.val().toString();

    // If there's input
    if(val != '') {
      regs = val.match(re);
      // And it passes regex
      if(regs) {
        if(regs[4]) {
          // Check:  12-hour time format with am/pm
          if(regs[1] < 1 || regs[1] > 12) {
            valid = false;
          }
        } else {
          // Check:  24-hour time format
          if(regs[1] > 23) {
            valid = false;
          }
        }
        // Check:  Minutes
        if(regs[2] > 59) {
          valid = false;
        }
      } else {
        valid = false;
      }
    }
    else {
      valid = false;
    }

    return valid;
  }

  function parseTime(timeStr, dt) {
    // This function takes a string and outputs a moment obj.
    // The moment obj can parse, but you have to specify the time format.
    // Here, we can't be sure what format the user will input,
    // so a regex is the next best choice

    if (!dt) {
      dt = moment.utc("1-1-1900", "M-D-YYYY");
    }
 
    var time = timeStr.match(/(\d+)(?::(\d\d))?\s*(p?)/i);
    if (!time) {
      return dt;
    }
    var hours = parseInt(time[1], 10);
    if (hours == 12 && !time[3]) {
      hours = 0;
    }
    else {
      hours += (hours < 12 && time[3]) ? 12 : 0;
    }
 
    dt.hours(hours);
    dt.minutes(parseInt(time[2], 10) || 0);
    dt.seconds(0);
    return dt;
  }

  //--------------- Events ---------------

  // OK button updates sched
  $('#save-sched-btn').click(function(){
    saveSchedule();
  });

  // Close button hides popup
  $('#close-sched-btn').click(function(){
    cancelSchedule();
  });

  // Delete button deletes sched
  $('#delete-sched-btn').click(function(){
    deleteSchedule();
  });

  // Create button creates sched
  $('#add-customer-btn').click(function(){
    //editSchedule($(this), e);
  });  

  // When user clicks on a schedule
  $('td.sched').click(function(e){
    editSchedule($(this), e);
  });

  // Cust filter saves filter, reloads page
  $('#cust_filter').change(function() {
    $.get('cust_filter', { cust_filter: $(this).val() }, function() {
      location.reload();
    });
  });

  // Stop sched popup form from submitting normally
  $('#form-popup').submit(function(event) {
    event.preventDefault();
  });

  // When user presses escape, hide event-popup
  $(document).keyup(function(e) {
    if (e.keyCode == 27) { cancelSchedule(); }   // code 27 = escape key
  });

  // Init date picker
  $('.date-picker').datepicker();

  // Set expand btn icon to << for this page only 
  $('#expand-btn').html("<<");

</script>