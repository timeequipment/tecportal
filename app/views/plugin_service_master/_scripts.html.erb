<script>

  //--------------- Variables ---------------
  
  var day_editing = 0;
  var customer = {};
  var employee = {};
  var workgroups = {};
  var cust_pattern = {};
  
  // Popup is draggable
  var popup = $('#sched-popup').draggable();

  //--------------- Functions ---------------

  function getEmployee() {
    employee = {};
    workgroups = {};

    // Get selected emp id
    var select = document.getElementById('employee-list');
    var id = select.options[select.selectedIndex].value;
    var params = { emp_id : id };
    
    // Request this emp
    $.get('get_employee', params, function(data) {
      if (data) {
        if (data[0]) employee   = data[0].psvm_emp;
        if (data[1]) workgroups = data[1];
        viewEmployee();
      }
      $('#emp-wrapper').show();
    });
  }

  function viewEmployee() {
    // Reset all checkboxes, etc.
    $('input[type="checkbox"]').prop('checked', false);
    $('#customers-assigned').html('<label>(None)</label>');

    // If we received an employee object from the server
    if (employee) {
      var empid     = employee.emp_id;
      var firstname = employee.first_name;
      var lastname  = employee.last_name;
      var custom1   = employee.custom1;

      // View employee's name and id #
      $('#emp-name').html(firstname + ' ' + lastname);
      $('#emp_id').val(empid);
      $('#first_name').val(firstname);
      $('#last_name') .val(lastname);
      $('#custom1').val(custom1);
    }

    // If this employee is assigned to customers
    if (workgroups && workgroups.length > 0) {
      // Check all the customers assigned to this employee and list their names
      var container = $('<div />');
      for (var i = 0; i < workgroups.length; i++) {
        $('#psvm_workgroup_' + workgroups[i].psvm_workgroup.id).prop('checked', true);
        $('<label />', {
          html: workgroups[i].psvm_workgroup.wg_name
        }).appendTo(container);
      }
      $('#customers-assigned').html(container);
    }
  }

  function editCustPattern(td, e) {
    resetSchedForm();
    // Find the day it references
    day_editing = td.attr('daynum');
    // Load the values into the schedule popup
    if (day_editing === '1' && cust_pattern.day1) {
      $('#sch_start_time').val(cust_pattern.day1.start_time.format('h:mm a')); 
      $('#sch_end_time')  .val(cust_pattern.day1.end_time.format('h:mm a')); 
      $('#sch_wg5')  .val(cust_pattern.day1.activity);
    }
    if (day_editing === '2' && cust_pattern.day2) {
      $('#sch_start_time').val(cust_pattern.day2.start_time.format('h:mm a')); 
      $('#sch_end_time')  .val(cust_pattern.day2.end_time.format('h:mm a')); 
      $('#sch_wg5')  .val(cust_pattern.day2.activity);
    }
    if (day_editing === '3' && cust_pattern.day3) {
      $('#sch_start_time').val(cust_pattern.day3.start_time.format('h:mm a')); 
      $('#sch_end_time')  .val(cust_pattern.day3.end_time.format('h:mm a')); 
      $('#sch_wg5')  .val(cust_pattern.day3.activity);
    }
    if (day_editing === '4' && cust_pattern.day4) {
      $('#sch_start_time').val(cust_pattern.day4.start_time.format('h:mm a')); 
      $('#sch_end_time')  .val(cust_pattern.day4.end_time.format('h:mm a')); 
      $('#sch_wg5')  .val(cust_pattern.day4.activity);
    }
    if (day_editing === '5' && cust_pattern.day5) {
      $('#sch_start_time').val(cust_pattern.day5.start_time.format('h:mm a')); 
      $('#sch_end_time')  .val(cust_pattern.day5.end_time.format('h:mm a')); 
      $('#sch_wg5')  .val(cust_pattern.day5.activity);
    }
    if (day_editing === '6' && cust_pattern.day6) {
      $('#sch_start_time').val(cust_pattern.day6.start_time.format('h:mm a')); 
      $('#sch_end_time')  .val(cust_pattern.day6.end_time.format('h:mm a')); 
      $('#sch_wg5')  .val(cust_pattern.day6.activity);
    }
    if (day_editing === '7' && cust_pattern.day7) {
      $('#sch_start_time').val(cust_pattern.day7.start_time.format('h:mm a')); 
      $('#sch_end_time')  .val(cust_pattern.day7.end_time.format('h:mm a')); 
      $('#sch_wg5')  .val(cust_pattern.day7.activity);
    }
    // Show the schedule popup
    var offset = $('.popup-owner-js').offset();
    popup.css("left", e.pageX - offset.left + 'px');
    popup.css("top",  e.pageY - offset.top + 'px');
    popup.show();
    $('#sch_start_time').select();
  }

  function editSchedule(td, e) {
    resetSchedForm();
    // Find the <td> it references
    schid     = td.attr('schid');
    filekey   = td.attr('filekey');
    date      = td.attr('date');
    starttime = td.attr('starttime');
    endtime   = td.attr('endtime');
    cust      = td.attr('cust');
    activity  = td.attr('activity');
    // Load the values into the schedule popup
    $('#schid')         .val(schid); 
    $('#filekey')       .val(filekey);
    $('#sch_date')      .val(date);
    $('#sch_start_time').val(starttime); 
    $('#sch_end_time')  .val(endtime); 
    $('#sch_wg3')       .val(cust);
    $('#sch_wg5')       .val(activity);
    // Show the schedule popup
    var offset = $('.popup-owner-js').offset();
    popup.css("left", e.pageX - offset.left + 'px');
    popup.css("top",  e.pageY - offset.top + 'px');
    popup.show();
    $('#sch_start_time').select();
  }

  function resetSchedForm() {
    $('#sch_start_time').css("background","#fff");
    $('#sch_end_time').css("background","#fff");
    $('#sch_start_time').val('');
    $('#sch_end_time').val('');
    $('#sch_wg5').val('');
  }

  function cancelSchedule() {
    resetSchedForm();
    popup.hide(); 
  }

  function updateCustSchedule() {
    // Validate times
    var startCheck = checkTime($('#sch_start_time'));
    var endCheck   = checkTime($('#sch_end_time'));
    $('#sch_start_time').css("background","#fff");
    $('#sch_end_time').css("background","#fff");

    // If they pass
    if (startCheck && endCheck) {
      // Make moment objects to contain sched info
      var start_time = parseTime($('#sch_start_time').val());
      var end_time   = parseTime($('#sch_end_time').val());
      if (start_time.isAfter(end_time)) end_time = end_time.add('hours', 12); // For am - pm
      if (start_time.isAfter(end_time)) end_time = end_time.add('hours', 12); // For pm - am

      // Refresh inputs with parsed times
      $('#sch_start_time').val(start_time.format('h:mm a'))
      $('#sch_end_time').val(end_time.format('h:mm a'))

      s = {
        'start_time' : start_time, 
        'end_time' : end_time,
        'hours' : end_time.diff(start_time, 'hours', true), // end_time - start_time,
        'activity' : $('#sch_wg5').val(), 
      };
      // Save in memory
      if (day_editing === '1') cust_pattern.day1 = s;
      if (day_editing === '2') cust_pattern.day2 = s;
      if (day_editing === '3') cust_pattern.day3 = s;
      if (day_editing === '4') cust_pattern.day4 = s;
      if (day_editing === '5') cust_pattern.day5 = s;
      if (day_editing === '6') cust_pattern.day6 = s;
      if (day_editing === '7') cust_pattern.day7 = s;

      // Clear inputs, exit popup, refresh customer
      resetSchedForm();
      popup.hide(); 
      viewCustomer();

    // If they didn't pass make them red
    } else {
      if (!startCheck) {
        $('#sch_start_time').css("background","#ffc4ba");
        $('#sch_start_time').select();
      }
      if (!endCheck) {
        $('#sch_end_time').css("background","#ffc4ba");
        $('#sch_end_time').select();
      }
    }
  }

  function saveSchedule() {

    // Validate times
    var startCheck = checkTime($('#sch_start_time'));
    var endCheck   = checkTime($('#sch_end_time'));
    $('#sch_start_time').css("background","#fff");
    $('#sch_end_time').css("background","#fff");

    // If they pass
    if (startCheck && endCheck) {
      
      // Make moment objects to contain sched info
      var start_time = parseTime($('#sch_start_time').val());
      var end_time   = parseTime($('#sch_end_time').val());
      
      // Adjust end if its before start
      if (start_time.isAfter(end_time)) end_time = end_time.add('hours', 12); // For am - pm
      if (start_time.isAfter(end_time)) end_time = end_time.add('hours', 12); // For pm - am

      // Refresh inputs with parsed times
      $('#sch_start_time').val(start_time.format('h:mm a'))
      $('#sch_end_time').val(end_time.format('h:mm a'))

      // Send it to the server - save this schedule and reload page
      $.post('save_schedule', $('#form-popup').serialize(), function() {
        location.reload();
      });

    // If they didn't pass make them red
    } else {
      if (!startCheck) {
        $('#sch_start_time').css("background","#ffc4ba");
        $('#sch_start_time').select();
      }
      if (!endCheck) {
        $('#sch_end_time').css("background","#ffc4ba");
        $('#sch_end_time').select();
      }
    }
  }

  function deleteSchedule()
  {
    // Tell server to delete this schedule
    $.post('delete_schedule', $('#form-popup').serialize(), function() {
      location.reload();
    });
  }

  function deleteCustSchedule()
  {
    // Delete in memory and in html
    if (day_editing === '1') {
      cust_pattern.day1 = "";
      $('#day1').html('');
    } else if (day_editing === '2') {
      cust_pattern.day2 = "";
      $('#day2').html('');
    } else if (day_editing === '3') {
      cust_pattern.day3 = "";
      $('#day3').html('');
    } else if (day_editing === '4') {
      cust_pattern.day4 = "";
      $('#day4').html('');
    } else if (day_editing === '5') {
      cust_pattern.day5 = "";
      $('#day5').html('');
    } else if (day_editing === '6') {
      cust_pattern.day6 = "";
      $('#day6').html('');
    }

    // exit popup form
    cancelSchedule();
  }

  // Check if input has a valid time
  function checkTime(field) {
    var valid = true;

    // Regex for valid time format
    // re = /(\d{1,2}):(\d{2})(:00)?([ap]m)?/   // good
    re = /(\d+)(?::(\d\d))?\s*(p?)/i;        // better
    var val = field.val().toString();

    // If there's input
    if(val != '') {
      regs = val.match(re);
      // And it passes regex
      if(regs) {
        if(regs[4]) {
          // Check:  12-hour time format with am/pm
          if(regs[1] < 1 || regs[1] > 12) {
            valid = false;
          }
        } else {
          // Check:  24-hour time format
          if(regs[1] > 23) {
            valid = false;
          }
        }
        // Check:  Minutes
        if(regs[2] > 59) {
          valid = false;
        }
      } else {
        valid = false;
      }
    }
    else {
      valid = false;
    }

    return valid;
  }

  function parseTime(timeStr, dt) {
    // This function takes a string and outputs a moment obj.
    // The moment obj can parse, but you have to specify the time format.
    // Here, we can't be sure what format the user will input,
    // so a regex is the next best choice

    if (!dt) {
      dt = moment.utc("1-1-1900", "M-D-YYYY");
    }
 
    var time = timeStr.match(/(\d+)(?::(\d\d))?\s*(p?)/i);
    if (!time) {
      return dt;
    }
    var hours = parseInt(time[1], 10);
    if (hours == 12 && !time[3]) {
      hours = 0;
    }
    else {
      hours += (hours < 12 && time[3]) ? 12 : 0;
    }
 
    dt.hours(hours);
    dt.minutes(parseInt(time[2], 10) || 0);
    dt.seconds(0);
    return dt;
  }

  //--------------- Events ---------------

  // View customer button gets customer
  $('#view-cust-btn').click(function(){
    getCustomer();
  });

  // View employee button gets employee
  $('#view-emp-btn').click(function(){
    getEmployee();
  });

  // OK button updates cust sched
  $('#save-cust-sched-btn').click(function(){
    updateCustSchedule();
  });

  // OK button updates sched
  $('#save-sched-btn').click(function(){
    saveSchedule();
  });

  // Close button hides popup
  $('#close-sched-btn, #close-cust-sched-btn').click(function(){
    cancelSchedule();
  });

  // Delete button deletes sched
  $('#delete-sched-btn').click(function(){
    deleteSchedule();
  });

  // Delete button deletes cust sched
  $('#delete-cust-sched-btn').click(function(){
    deleteCustSchedule();
  });

  // When user clicks on a cust schedule
  $('.cust-sched').click(function(e){
    editCustPattern($(this), e);
  });

  // When user clicks on a schedule
  $('.sched').click(function(e){
    editSchedule($(this), e);
  });

  // Team filter saves filter, reloads page
  $('#team_filter').change(function() {
    $.get('team_filter', { team_filter: $(this).val() }, function() {
      location.reload();
    });
  });

  // Cust filter saves filter, reloads page
  $('#cust_filter').change(function() {
    $.get('cust_filter', { cust_filter: $(this).val() }, function() {
      location.reload();
    });
  });

  // Stop sched popup form from submitting normally
  $('#form-popup').submit(function(event) {
    event.preventDefault();
  });

  // When user presses escape, hide sched-popup
  $(document).keyup(function(e) {
    if (e.keyCode == 27) { cancelSchedule(); }   // code 27 = escape key
  });

  // Save customer button
  $("#cust-form").submit(function( event ) {
   
    // Stop form submission
    event.preventDefault();

    // Get data   
    var wg_num     = $('#wg_num').val();
    var wg_name    = $('#wg_name').val();
    var day_field1 = null;
    var day_field2 = null;
    var day_field3 = null;
    var day_field4 = null;
    var day_field5 = null;
    var day_field6 = null;
    var day_field7 = null;

    if (cust_pattern.day1) day_field1 = JSON.stringify(cust_pattern.day1);
    if (cust_pattern.day2) day_field2 = JSON.stringify(cust_pattern.day2);
    if (cust_pattern.day3) day_field3 = JSON.stringify(cust_pattern.day3);
    if (cust_pattern.day4) day_field4 = JSON.stringify(cust_pattern.day4);
    if (cust_pattern.day5) day_field5 = JSON.stringify(cust_pattern.day5);
    if (cust_pattern.day6) day_field6 = JSON.stringify(cust_pattern.day6);
    if (cust_pattern.day7) day_field7 = JSON.stringify(cust_pattern.day7);
   
    var params = {
      wg_num:     wg_num, 
      wg_name:    wg_name, 
      day_field1: day_field1,  
      day_field2: day_field2, 
      day_field3: day_field3, 
      day_field4: day_field4, 
      day_field5: day_field5, 
      day_field6: day_field6, 
      day_field7: day_field7, 
    };

    // Post data
    $.post('save_customer', params, function(data) {
      $('#save-btn').val('Saved!');
      window.setTimeout(function() {
        $('#save-btn').val('Save Customer');
      }, 2000);
    });
  });

  // Save employee button
  $("#emp-form").submit(function( event ) {
   
    // Stop form submission
    event.preventDefault();
   
    // Get form
    params = $(this).serialize();

    // Post form
    $.post('save_employee', params, function(data) {
      $('#save-btn').val('Saved!');

      // Reload employee
      getEmployee();
      window.setTimeout(function() {
        $('#save-btn').val('Save Employee');
      }, 2000);
    });
  });

</script>